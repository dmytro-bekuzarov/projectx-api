ext.springLibs = [
        "org.springframework:spring-core:${springVersion}",
        "org.springframework:spring-context:${springVersion}",
        "org.springframework:spring-beans:${springVersion}",
        "org.springframework:spring-expression:${springVersion}"
]

ext.springWebLibs = [
        "org.springframework:spring-webmvc:${springVersion}",
        "org.springframework:spring-context-support:${springVersion}"
]
ext.testingLibs = [
        "org.springframework:spring-test:${springVersion}",
        "junit:junit:${jUnitVersion}"
]

ext.loggingLibs = [
        "org.slf4j:slf4j-api:${slf4jVersion}",
        "org.apache.logging.log4j:log4j-slf4j-impl:${log4jVersion}",
        "org.apache.logging.log4j:log4j-api:${log4jVersion}",
        "org.apache.logging.log4j:log4j-core:${log4jVersion}"
]

ext.aopLibs = [
        "org.springframework:spring-aop:${springVersion}",
        "org.aspectj:aspectjweaver:${aspectJVersion}",
        "org.aspectj:aspectjrt:${aspectJVersion}"
]

configure(allprojects) {
    repositories {
        mavenLocal()
        mavenCentral()
    }

    apply from: "$rootDir/gradle/versioning.gradle"
    project.version = ext.version.toString()
}

// Configuring projects
configure(allprojects - project) {
    apply plugin: 'idea'
    apply plugin: 'java'

    dependencies {
        compile 'org.apache.commons:commons-collections4:4.1'
    }

    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    compileJava.options.encoding = 'UTF-8'

    sourceSets {
        testInteg {
            java.srcDir file('src/testInteg/java')
            resources.srcDir file('src/testInteg/resources')
            compileClasspath = sourceSets.main.output + configurations.testRuntime
            runtimeClasspath = output + compileClasspath
        }
    }

    test {
        exclude '**/testInteg/**'
    }


    task testInteg(type: Test) {
        description = 'Runs the integration tests.'
        group = 'verification'
        testClassesDir = sourceSets.testInteg.output.classesDir
        classpath = sourceSets.testInteg.runtimeClasspath
        testResultsDirName = "${buildDir}/test-integ-results"
        testReportDirName = "${buildDir}/reports/tests-integ"
    }

}

task wrapper(type: Wrapper) {
    gradleVersion = gradleVersion
}
